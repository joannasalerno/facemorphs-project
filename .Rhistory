library(psych); library(plyr)
## Create transform function to recode data
transform <- function(data, x) data[,x] <- revalue(factor(data[,x]), map, warn_missing=FALSE)
key.list <- list(1:7)
faceKey <- make.keys(7,key.list)
d1a <- read.csv("data/base_data/Face_Morph1_raw.csv", header=TRUE, stringsAsFactors = FALSE)
d1b <- read.csv("data/base_data/Face_Morph2_raw.csv", header=TRUE, stringsAsFactors = FALSE)
d2a <- d1a[c(20,28:135)]
d2b <- d1b[c(20,28:189)]
map <- c('7'= '1', '6 - Moderately Negative'='2', '5 - Slightly Negative'='3','4 - Neutral'='4','3 - Slightly Positive'='5', '2 - Moderately Positive'='6', '1 - Very Positive'='7', '7'= '1', '6'='2', '5'='3','4'='4','3'='5', '2'='6', '1'='7')
for (i in 2:ncol(d2a)) d2a[i] <- as.numeric(as.character(transform(d2a,i)))
# add sub number
subnum1 <- seq(1:nrow(d2a))
d3a <- cbind(subnum1, d2a)
subnum2 <- seq(1:nrow(d2b))
d3b <- cbind(subnum2, d2b)
d4b <- d3b[c(1,165,3:164)]
library(psych); library(plyr)
## Create transform function to recode data
transform <- function(data, x) data[,x] <- revalue(factor(data[,x]), map, warn_missing=FALSE)
key.list <- list(1:7)
faceKey <- make.keys(7,key.list)
d1a <- read.csv("data/base_data/Face_Morph1_raw.csv", header=TRUE, stringsAsFactors = FALSE)
d1b <- read.csv("data/base_data/Face_Morph2_raw.csv", header=TRUE, stringsAsFactors = FALSE)
d2a <- d1a[c(20,28:135)]
d2b <- d1b[c(20,28:189)]
map <- c('7'= '1', '6 - Moderately Negative'='2', '5 - Slightly Negative'='3','4 - Neutral'='4','3 - Slightly Positive'='5', '2 - Moderately Positive'='6', '1 - Very Positive'='7', '7'= '1', '6'='2', '5'='3','4'='4','3'='5', '2'='6', '1'='7')
for (i in 2:ncol(d2a)) d2a[i] <- as.numeric(as.character(transform(d2a,i)))
for (i in 2:ncol(d2b)) d2b[i] <- as.numeric(as.character(transform(d2b,i)))
#For d1a, you want to remove the outlier participant (above age limit)
d2a <- d2a[-(103),]
d2a <- d2a[6:nrow(d2a),] #this clips off excess, including survey preview trials
# add 19 to age (specifically for d2b)
d2b <- d2b[4:nrow(d2b),]
d2b$age <- as.numeric(d2b$egb.18) + 19
# add sub number
subnum1 <- seq(1:nrow(d2a))
d3a <- cbind(subnum1, d2a)
subnum2 <- seq(1:nrow(d2b))
d3b <- cbind(subnum2, d2b)
d4b <- d3b[c(1,165,3:164)]
write.csv(d3a, 'data/base_data/Faces1_Numeric_Data_reverse.csv', row.names=FALSE)
write.csv(d4b, 'data/base_data/Faces2_Numeric_Data_reverse.csv', row.names=FALSE)
# load libraries and functions
library(reshape2); library(plyr); library(dplyr)
# load libraries and functions
library(reshape2); library(plyr); library(dplyr)
source('scr/SummarySE2.R')
# load data
d1a <- read.csv('data/base_data/Faces1_Numeric_Data_reverse.csv', header=TRUE)
d1b <- read.csv('data/base_data/Faces2_Numeric_Data_reverse.csv', header=TRUE)
# delete the 'natural' columns in Faces2 (not important for this analysis)
d1b_no_nat <- d1b[, -c(1:2)]
d <- 1:ncol(d1b_no_nat)
d1b_no_nat <- d1b_no_nat[, !(d%%3==0)]
d1b_2 <- cbind(d1b[c(1:2)], d1b_no_nat)
d1b_2$subnum2 <- seq(1:nrow(d1b_2)) + 100
d1b <- d1b_2
#remember to rename subnum1 and subnum2 to subnum for subsequent analyses
colnames(d1a)[colnames(d1a)=="subnum1"] <- "subnum"
colnames(d1b)[colnames(d1b)=="subnum2"] <- "subnum"
# melt
d2a <- melt(d1a, id.vars = c('subnum', 'age'), value.name = 'rating')
d2b <- melt(d1b, id.vars = c('subnum', 'age'), value.name = 'rating')
#COMBINE VARIABLES!
d2 <- rbind(d2a, d2b)
# pull apart variable
d2$emotion <- as.factor(t(as.data.frame(strsplit(as.character(d2$variable), '_')))[,2])
d2$level <- as.factor(t(as.data.frame(strsplit(as.character(d2$variable), '_')))[,3])
d2$domain <- as.factor(t(as.data.frame(strsplit(as.character(d2$variable), '_')))[,4])
View(d2)
# create [clean] csv of combined data
write.csv(d2,'data/all_faces_ratings.csv', row.names = FALSE)
# -------------------------------
# age grouping
# -------------------------------
d4a <- summarySE2(data = d2, measurevar = 'rating', groupvars = c('subnum', 'age', 'domain', 'emotion', 'level'), na.rm = TRUE)
# make age groups
d4a$agegrp <- ntile(d4a$age, 3)
d4a$agegrp <- factor(d4a$agegrp, levels = c(1,2,3), labels = c('Younger', 'Middle Age', 'Older'))
# reorganize table and make wide
d4a <- d4a[c(1,11,2:5,7,8)]
d4a$emo_level <- interaction(d4a$emotion, d4a$level) # create interaction term
d4a$emo_level_dom <- interaction(d4a$emotion, d4a$level, d4a$domain)
# dataframe associated with combined table, domain separated in long format
d4w <- dcast(d4a, subnum + agegrp + age + domain ~ emo_level, value.var = 'rating')
# dataframe associated with combined wide table for valence and arousal ratings
d4w2 <- dcast(d4a, subnum + agegrp + age ~ emo_level_dom, value.var = 'rating')
#Output means/ranges for Age Groups
ya_mean <- mean(d4w$age[which(d4w$agegrp == 'Younger')])
ya_range <- range(d4w$age[which(d4w$agegrp == 'Younger')])
ma_mean <- mean(d4w$age[which(d4w$agegrp == 'Middle Age')])
ma_range <- range(d4w$age[which(d4w$agegrp == 'Middle Age')])
oa_mean <- mean(d4w$age[which(d4w$agegrp == 'Older')])
oa_range <- range(d4w$age[which(d4w$agegrp == 'Older')])
summary_agegrps <- data.frame(ya_mean, ya_range, ma_mean, ma_range, oa_mean, oa_range)
View(summary_agegrps)
write.csv(d4w2,'data/ave_faces_ratings_aro_val.csv', row.names = FALSE)
library(ggplot2); library(reshape2); library(plyr); library(dplyr); library(plotly); library(wesanderson)
source('scr/SummarySE2.R')
#===============
# arousal
#===============
f <- read.csv('data/ave_faces_ratings.csv')
fa <- f[which(f$domain == 'arsl'),]
# remove age and domain variable (missing data)
fa$domain <- NULL
fa$age <- NULL
# reorder age variable
fa$agegrp <- relevel(fa$agegrp, 'Younger')
# remove people with incomplete data
fa <- fa[complete.cases(fa),]
# change from wide to long format
fa1 <- melt(fa, id.vars=c('subnum','agegrp'), value.name = 'rating')
# make new variable for emotion
fa1$emotion <- as.factor(t(as.data.frame(strsplit(as.character(fa1$variable), '[.]')))[,1])
fa1$emotion <- revalue(fa1$emotion, c('a'= 'Angry', 's' = 'Sad', 'h' = 'Happy'))
fa1$emotion <- relevel(fa1$emotion, 'Sad')
fa1$emotion <- relevel(fa1$emotion, 'Happy')
# make new variable for level
fa1$level <- as.factor(t(as.data.frame(strsplit(as.character(fa1$variable), '[.]')))[,2])
fa1$level <- relevel(fa1$level, 'med')
fa1$level <- relevel(fa1$level, 'low')
fa1$level <- revalue(fa1$level, c('low'= 'Low', 'med' = 'Med', 'full' = 'Full'))
fa1$variable <- NULL
# create a summary table for graphing
fa2 <- summarySE2(fa1, measurevar = 'rating', groupvars=c('agegrp', 'emotion', 'level'))
fa3 <- summarySE2(fa1, 'rating', groupvars=c('agegrp', 'emotion'))
fa4 <- summarySE2(fa1, 'rating', groupvars = c('agegrp' , 'level' ))
# graph of emotion x age interaction
emo_age_leg_arsl = ggplot(fa3, aes(x=emotion, y= rating, fill = agegrp)) +
geom_bar(stat='identity', position=position_dodge()) +
geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
ylim(0,7) + theme_minimal() + theme(legend.position = 'none', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + scale_fill_brewer(name  ="Age Group") + xlab("Emotion") + ylab(NULL) + coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1)) #ylab ("Arousal Rating")
# graph of level x age interaction
mag_age_leg_arsl = ggplot(fa4, aes (x = agegrp, y = rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) +   geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
ylim(0,7) + theme_minimal() + theme(legend.position = 'top', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + scale_fill_brewer(name  ="Magnitude of Expression") + xlab("Age Group") + ylab(NULL) + coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1))
# + ylab ("Arousal Rating")
mag_age_leg_arsl
# graph of level x age interaction (without legend)
mag_age_arsl = ggplot(fa4, aes (x = agegrp, y = rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) +   geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
ylim(0,7) + theme_minimal() + theme(legend.position = 'none', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + scale_fill_brewer(name  ="Magnitude of Expression") + xlab("Age Group") + ylab(NULL) + coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1))
# graph of emotion x mag x age interaction
emo_mag_age_leg_arsl = ggplot(fa2, aes(emotion, rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) + geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
ylim(0,7) + theme_minimal() + theme(legend.position = 'top', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + facet_wrap(~ agegrp) + xlab("Emotion") + ylab("Arousal Rating") + coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1)) + scale_fill_manual(values =wes_palette("Chevalier1"))
emo_mag_age_leg_arsl
# graph of emotion x mag x age interaction
emo_mag_age_leg_arsl = ggplot(fa2, aes(emotion, rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) + geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
ylim(0,7) + theme_minimal() + theme(legend.position = 'top', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + facet_wrap(~ agegrp) + xlab("Emotion") + ylab("Arousal Rating") + coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1))
emo_mag_age_leg_arsl
# graph of emotion x mag x age interaction
emo_mag_age_leg_arsl = ggplot(fa2, aes(emotion, rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) + geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
ylim(0,7) + theme_minimal() + theme(legend.position = 'top', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + facet_wrap(~ agegrp) + xlab("Emotion") + ylab("Arousal Rating") + coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1)) + scale_fill_brewer(name  ="Level of Expression")
emo_mag_age_leg_arsl
emo_mag_age_leg_arsl
# graph of emotion x mag x age interaction (no legend)
emo_mag_age_arsl = ggplot(fa2, aes(emotion, rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) +
geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
ylim(0,7) + theme_minimal() + theme(legend.position = 'none', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + facet_wrap(~ agegrp) + xlab("Emotion") + scale_fill_brewer(name  ="Level of Expression") + ylab(NULL) + coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1))
#+ ylab ("Arousal Rating")
#ggsave(emo_age_leg_arsl, filename = "plots/emo_age_legend_arsl.png", width = 11, height = 7, units = "in")
#ggsave(mag_age_leg_arsl, filename = "plots/mag_age_legend_arsl.png", width = 6, height = 7, units = "in")
#ggsave(mag_age_arsl, filename = "plots/mag_age_arsl.png",  width = 6, height = 7, units = "in")
#ggsave(emo_mag_age_arsl, filename = "plots/emo_mag_age_arsl.png",  width = 6, height = 7, units = "in", bg="transparent")
ggsave(emo_mag_age_leg_arsl, filename = "plots/emo_mag_age_legend_arsl.png",  width = 11, height = 7, units = "in", bg="transparent")
library(ggplot2); library(reshape2); library(plyr); library(wesanderson)
#setwd("~/Dropbox (MCAB Lab)/MCAB/Drafts/facemorphs")
source('scr/SummarySE2.R')
f <- read.csv('data/ave_faces_ratings.csv')
fv <- f[which(f$domain == 'vln'),]
# remove age and domain variable (missing data)
fv$domain <- NULL
fv$age <- NULL
#get summary stats for demographics
summary(fv)
# reorder age variable
fv$agegrp <- relevel(fv$agegrp, 'Younger')
# remove people with incomplete data
fv <- fv[complete.cases(fv),]
# change from wide to long format
fv1 <- melt(fv, id.vars = c('subnum','agegrp'), value.name = 'rating')
# make new variable for emotion
fv1$emotion <- as.factor(t(as.data.frame(strsplit(as.character(fv1$variable), '[.]')))[,1])
fv1$emotion <- revalue(fv1$emotion, c('a'= 'Angry', 's' = 'Sad', 'h' = 'Happy'))
fv1$emotion <- relevel(fv1$emotion, 'Sad')
fv1$emotion <- relevel(fv1$emotion, 'Happy')
# make new variable for level
fv1$level <- as.factor(t(as.data.frame(strsplit(as.character(fv1$variable), '[.]')))[,2])
fv1$level <- relevel(fv1$level, 'med')
fv1$level <- relevel(fv1$level, 'low')
fv1$level <- revalue(fv1$level, c('low'= 'Low', 'med' = 'Med', 'full' = 'Full'))
# delete variable column
fv1$variable <- NULL
# create a summary table for graphing
fv2 <- summarySE2(fv1, 'rating', groupvars=c('agegrp', 'emotion', 'level'))
fv3 <- summarySE2(fv1, 'rating', groupvars=c('agegrp', 'emotion'))
fv4 <- summarySE2(fv1, 'rating', groupvars = c('agegrp' , 'level' ))
# graph of emotion x age interaction(without legend)
emo_age_val <-  ggplot(fv3, aes(x=emotion, y= rating, fill = agegrp)) +
geom_bar(stat='identity', position=position_dodge()) +
geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1)) + theme_minimal() + theme(legend.position='none', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + scale_fill_brewer(name  ="Age Group") + xlab("Emotion") + ylab (NULL)
# graph of emotion x age interaction(with legend)
emo_age_legend_val <-  ggplot(fv3, aes(x=emotion, y= rating, fill = agegrp)) +
geom_bar(stat='identity', position=position_dodge()) +
geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1)) + theme_minimal() + theme(legend.position = "top", legend.title = element_text(size=15, face="bold"), axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + scale_fill_brewer(name  ="Age Group") + xlab("Emotion") + ylab (NULL)
# graph of level x age interactionwithout legend
age_mag_val <- ggplot(fv4, aes (x = agegrp, y = rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) +   geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) + theme_minimal() + theme(legend.position='none', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + scale_fill_brewer(name  ="LEVEL") + xlab("Age Group") + ylab (NULL) +
coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1))
#mXa with legend
age_mag_leg_val <- ggplot(fv4, aes (x = agegrp, y = rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) +   geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) + theme_minimal() + theme(legend.position='top', legend.title = element_text(size=15, face="bold"), axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + scale_fill_brewer(name  ="Magnitude of Expression") + xlab("Age Group") + ylab (NULL) +
coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1))
emo_mag_age_leg_val = ggplot(fv2, aes(emotion, rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) + geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
ylim(1,7) + theme_minimal() + theme(legend.position = 'top', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + facet_wrap(~ agegrp) + xlab("Emotion") + ylab("Valence Rating") + coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1)) + scale_fill_manual(values =wes_palette("GrandBudapest1"))
#3x3x3 without legend
emo_mag_age_val = ggplot(fv2, aes(emotion, rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) +
geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1)) + theme_minimal() + theme(legend.position = 'none', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + facet_wrap(~ agegrp) + xlab("Emotion") + scale_fill_brewer(name  ="Level of Expression") + ylab (NULL)
emo_mag_age_leg_val
#ggsave(emo_age_val, filename = "plots/emo_age_val.png", width = 11, height = 7, units = "in")
#ggsave(emo_age_legend_val, filename = "plots/emo_age_legend_val.png", width = 6, height = 7, units = "in")
#ggsave(age_mag_val, filename = "plots/age_mag_val.png",  width = 6, height = 7, units = "in")
#ggsave(age_mag_leg_val, filename = "plots/age_mag_legend_val.png",  width = 6, height = 7, units = "in", bg="transparent")
#ggsave(emo_mag_age_val, filename = "plots/emo_mag_age_val.png",  width = 11, height = 7, units = "in", bg="transparent")
ggsave(emo_mag_age_leg_val, filename = "plots/emo_mag_age_legend_val.png",  width = 6, height = 7, units = "in", bg="transparent")
# load libraries and functions
library(reshape2); library(plyr); library(dplyr)
#source('~/Dropbox (Personal)/Functions/SummarySE.R')
source('scr/SummarySE2.R')
d1 <- read.csv('data/base_data/Faces2_Numeric_Data_reverse.csv', header=TRUE)
d1_nat <- d1[, -c(1:2)]
d <- 1:ncol(d1_nat)
d1_nat <- d1_nat[, (d%%3==0)]
d1_nat2 <- cbind(d1[c(1:2)], d1_nat)
d1_nat2$subnum2 <- seq(1:nrow(d1_nat2)) + 100
d1_nat <- d1_nat2
#remember to rename subnum1 and subnum2 to subnum for subsequent analyses
colnames(d1_nat)[colnames(d1_nat)=="subnum2"] <- "subnum"
# melt
d2 <- melt(d1_nat, id.vars = c('subnum', 'age'), value.name = 'rating')
# pull apart variable
d2$emotion <- as.factor(t(as.data.frame(strsplit(as.character(d2$variable), '_')))[,2])
d2$level <- as.factor(t(as.data.frame(strsplit(as.character(d2$variable), '_')))[,3])
d2$domain <- as.factor(t(as.data.frame(strsplit(as.character(d2$variable), '_')))[,4])
View(d2)
# create [clean] csv of combined data
write.csv(d2,'data/nat_ratings.csv', row.names = FALSE)
#manual function import
d4a <- summarySE2(data = d2, measurevar = colnames(d2[4]) , groupvars = c('subnum', 'age', 'domain', 'emotion', 'level'), na.rm = TRUE)
# make age groups
d4a$agegrp <- ntile(d4a$age, 3)
# make age groups
d4a$agegrp <- ntile(d4a$age, 3)
d4a$agegrp <- factor(d4a$agegrp, levels = c(1,2,3), labels = c('Younger', 'Middle Age', 'Older'))
# reorganize table and make wide
d4a <- d4a[c(1,11,2:5,7,8)]
d4a$emo_level <- interaction(d4a$emotion, d4a$level) # create interaction term
d4a$emo_level_dom <- interaction(d4a$emotion, d4a$level, d4a$domain)
# dataframe associated with combined table, domain separated in long format
d4w <- dcast(d4a, subnum + agegrp + age + domain ~ emo_level, value.var = 'rating')
# dataframe associated with combined wide table for valence and arousal ratings
d4w2 <- dcast(d4a, subnum + agegrp + age ~ emo_level_dom, value.var = 'rating')
write.csv(d4w2,'data/nat_ratings.csv', row.names = FALSE)
# graph of emotion x mag x age interaction
emo_mag_age_leg_arsl = ggplot(fa2, aes(emotion, rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) + geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
ylim(0,7) + theme_minimal() + theme(legend.position = 'top', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + facet_wrap(~ agegrp) + xlab("Emotion") + ylab("Arousal Rating") + coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1)) + scale_fill_manual(values =wes_palette("GrandBudapest1"))
library(ggplot2); library(reshape2); library(plyr); library(dplyr); library(plotly); library(wesanderson)
source('scr/SummarySE2.R')
#===============
# arousal
#===============
f <- read.csv('data/ave_faces_ratings.csv')
fa <- f[which(f$domain == 'arsl'),]
# remove age and domain variable (missing data)
fa$domain <- NULL
fa$age <- NULL
# reorder age variable
fa$agegrp <- relevel(fa$agegrp, 'Younger')
# remove people with incomplete data
fa <- fa[complete.cases(fa),]
# change from wide to long format
fa1 <- melt(fa, id.vars=c('subnum','agegrp'), value.name = 'rating')
# make new variable for emotion
fa1$emotion <- as.factor(t(as.data.frame(strsplit(as.character(fa1$variable), '[.]')))[,1])
fa1$emotion <- revalue(fa1$emotion, c('a'= 'Angry', 's' = 'Sad', 'h' = 'Happy'))
fa1$emotion <- relevel(fa1$emotion, 'Sad')
fa1$emotion <- relevel(fa1$emotion, 'Happy')
# make new variable for level
fa1$level <- as.factor(t(as.data.frame(strsplit(as.character(fa1$variable), '[.]')))[,2])
fa1$level <- relevel(fa1$level, 'med')
fa1$level <- relevel(fa1$level, 'low')
fa1$level <- revalue(fa1$level, c('low'= 'Low', 'med' = 'Med', 'full' = 'Full'))
fa1$variable <- NULL
# create a summary table for graphing
fa2 <- summarySE2(fa1, measurevar = 'rating', groupvars=c('agegrp', 'emotion', 'level'))
fa3 <- summarySE2(fa1, 'rating', groupvars=c('agegrp', 'emotion'))
fa4 <- summarySE2(fa1, 'rating', groupvars = c('agegrp' , 'level' ))
# graph of emotion x mag x age interaction
emo_mag_age_leg_arsl = ggplot(fa2, aes(emotion, rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) + geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
ylim(0,7) + theme_minimal() + theme(legend.position = 'top', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + facet_wrap(~ agegrp) + xlab("Emotion") + ylab("Arousal Rating") + coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1)) + scale_fill_manual(values =wes_palette("GrandBudapest1"))
emo_mag_age_leg_arsl
# graph of emotion x mag x age interaction
emo_mag_age_leg_arsl = ggplot(fa2, aes(emotion, rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) + geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
ylim(0,7) + theme_minimal() + theme(legend.position = 'top', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + facet_wrap(~ agegrp) + xlab("Emotion") + ylab("Arousal Rating") + coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1)) + scale_fill_manual(values =wes_palette("GrandBudapest2"))
emo_mag_age_leg_arsl
# graph of emotion x mag x age interaction
emo_mag_age_leg_arsl = ggplot(fa2, aes(emotion, rating, fill = level)) + geom_bar(stat='identity', position=position_dodge()) + geom_errorbar(aes(ymin = rating -se, ymax = rating + se), width=.2, position=position_dodge(.9)) +
ylim(0,7) + theme_minimal() + theme(legend.position = 'top', axis.title.x = element_text(face="bold", size=20), axis.text.x  = element_text(size=15)) + facet_wrap(~ agegrp) + xlab("Emotion") + ylab("Arousal Rating") + coord_cartesian(ylim=c(1, 7)) + scale_y_continuous(breaks=seq(1, 7, 1)) + scale_fill_manual(values =wes_palette("GrandBudapest1"))
emo_mag_age_leg_arsl
#+ ylab ("Arousal Rating")
#ggsave(emo_age_leg_arsl, filename = "plots/emo_age_legend_arsl.png", width = 11, height = 7, units = "in")
#ggsave(mag_age_leg_arsl, filename = "plots/mag_age_legend_arsl.png", width = 6, height = 7, units = "in")
#ggsave(mag_age_arsl, filename = "plots/mag_age_arsl.png",  width = 6, height = 7, units = "in")
#ggsave(emo_mag_age_arsl, filename = "plots/emo_mag_age_arsl.png",  width = 6, height = 7, units = "in", bg="transparent")
ggsave(emo_mag_age_leg_arsl, filename = "plots/emo_mag_age_legend_arsl.png",  width = 11, height = 7, units = "in", bg="transparent")
